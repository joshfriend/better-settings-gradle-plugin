public final class com/fueledbycaffeine/spotlight/buildscript/BuildFile {
	public fun <init> (Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;)V
	public final fun component1 ()Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;
	public final fun copy (Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;)Lcom/fueledbycaffeine/spotlight/buildscript/BuildFile;
	public static synthetic fun copy$default (Lcom/fueledbycaffeine/spotlight/buildscript/BuildFile;Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;ILjava/lang/Object;)Lcom/fueledbycaffeine/spotlight/buildscript/BuildFile;
	public fun equals (Ljava/lang/Object;)Z
	public final fun getProject ()Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;
	public fun hashCode ()I
	public final fun parseDependencies (Ljava/util/Set;)Ljava/util/Set;
	public static synthetic fun parseDependencies$default (Lcom/fueledbycaffeine/spotlight/buildscript/BuildFile;Ljava/util/Set;ILjava/lang/Object;)Ljava/util/Set;
	public fun toString ()Ljava/lang/String;
}

public final class com/fueledbycaffeine/spotlight/buildscript/GradlePath : com/fueledbycaffeine/spotlight/buildscript/graph/GraphNode {
	public fun <init> (Ljava/io/File;Ljava/lang/String;)V
	public fun <init> (Ljava/nio/file/Path;Ljava/lang/String;)V
	public final fun component1 ()Ljava/nio/file/Path;
	public final fun component2 ()Ljava/lang/String;
	public final fun copy (Ljava/nio/file/Path;Ljava/lang/String;)Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;
	public static synthetic fun copy$default (Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;Ljava/nio/file/Path;Ljava/lang/String;ILjava/lang/Object;)Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;
	public fun equals (Ljava/lang/Object;)Z
	public final fun expandChildProjects (Ljava/util/List;)Ljava/util/Set;
	public static synthetic fun expandChildProjects$default (Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;Ljava/util/List;ILjava/lang/Object;)Ljava/util/Set;
	public fun findSuccessors (Ljava/util/Set;)Ljava/util/Set;
	public final fun getBuildFilePath ()Ljava/nio/file/Path;
	public final fun getHasBuildFile ()Z
	public final fun getPath ()Ljava/lang/String;
	public final fun getProjectDir ()Ljava/nio/file/Path;
	public final fun getRoot ()Ljava/nio/file/Path;
	public final fun getTypeSafeAccessorName ()Ljava/lang/String;
	public fun hashCode ()I
	public final fun isRootProject ()Z
	public fun toString ()Ljava/lang/String;
}

public final class com/fueledbycaffeine/spotlight/buildscript/GradlePathKt {
	public static final field GRADLE_PATH_SEP Ljava/lang/String;
	public static final field GRADLE_SCRIPT Ljava/lang/String;
	public static final field GRADLE_SCRIPT_KOTLIN Ljava/lang/String;
	public static final fun getBUILDSCRIPTS ()Ljava/util/List;
	public static final fun gradlePathRelativeTo (Ljava/io/File;Ljava/io/File;)Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;
	public static final fun gradlePathRelativeTo (Ljava/nio/file/Path;Ljava/nio/file/Path;)Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;
}

public final class com/fueledbycaffeine/spotlight/buildscript/SpotlightProjectList {
	public static final field Companion Lcom/fueledbycaffeine/spotlight/buildscript/SpotlightProjectList$Companion;
	public fun <init> (Ljava/nio/file/Path;Ljava/nio/file/Path;)V
	public final fun add ([Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;)V
	public final fun contains (Lcom/fueledbycaffeine/spotlight/buildscript/GradlePath;)Z
	public final fun read ()Ljava/util/Set;
	public static final fun readProjectList (Ljava/io/File;Ljava/io/File;)Ljava/util/Set;
	public static final fun readProjectList (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/Set;
}

public final class com/fueledbycaffeine/spotlight/buildscript/SpotlightProjectList$Companion {
	public final fun readProjectList (Ljava/io/File;Ljava/io/File;)Ljava/util/Set;
	public final fun readProjectList (Ljava/nio/file/Path;Ljava/nio/file/Path;)Ljava/util/Set;
}

public final class com/fueledbycaffeine/spotlight/buildscript/graph/BreadthFirstSearch {
	public static final field INSTANCE Lcom/fueledbycaffeine/spotlight/buildscript/graph/BreadthFirstSearch;
	public final fun flatten (Ljava/util/Set;Ljava/util/Set;)Ljava/util/List;
	public static synthetic fun flatten$default (Lcom/fueledbycaffeine/spotlight/buildscript/graph/BreadthFirstSearch;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Ljava/util/List;
	public final fun run (Ljava/util/Set;Ljava/util/Set;)Ljava/util/Map;
	public static synthetic fun run$default (Lcom/fueledbycaffeine/spotlight/buildscript/graph/BreadthFirstSearch;Ljava/util/Set;Ljava/util/Set;ILjava/lang/Object;)Ljava/util/Map;
}

public abstract interface class com/fueledbycaffeine/spotlight/buildscript/graph/GraphNode {
	public abstract fun findSuccessors (Ljava/util/Set;)Ljava/util/Set;
}

public abstract interface class com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule {
	public abstract fun getIncludedProjects ()Ljava/util/Set;
}

public final class com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$BuildscriptMatchRule : com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule {
	public fun <init> (Lkotlin/text/Regex;Ljava/util/Set;)V
	public final fun component1 ()Lkotlin/text/Regex;
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (Lkotlin/text/Regex;Ljava/util/Set;)Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$BuildscriptMatchRule;
	public static synthetic fun copy$default (Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$BuildscriptMatchRule;Lkotlin/text/Regex;Ljava/util/Set;ILjava/lang/Object;)Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$BuildscriptMatchRule;
	public fun equals (Ljava/lang/Object;)Z
	public fun getIncludedProjects ()Ljava/util/Set;
	public final fun getPattern ()Lkotlin/text/Regex;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$ProjectPathMatchRule : com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule {
	public fun <init> (Lkotlin/text/Regex;Ljava/util/Set;)V
	public final fun component1 ()Lkotlin/text/Regex;
	public final fun component2 ()Ljava/util/Set;
	public final fun copy (Lkotlin/text/Regex;Ljava/util/Set;)Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$ProjectPathMatchRule;
	public static synthetic fun copy$default (Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$ProjectPathMatchRule;Lkotlin/text/Regex;Ljava/util/Set;ILjava/lang/Object;)Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$ProjectPathMatchRule;
	public fun equals (Ljava/lang/Object;)Z
	public fun getIncludedProjects ()Ljava/util/Set;
	public final fun getPattern ()Lkotlin/text/Regex;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

public final class com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$TypeSafeProjectAccessorRule : com/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule {
	public fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;)V
	public synthetic fun <init> (Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun component1 ()Ljava/lang/String;
	public final fun component2 ()Ljava/util/Map;
	public final fun component3 ()Ljava/util/Set;
	public final fun copy (Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;)Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$TypeSafeProjectAccessorRule;
	public static synthetic fun copy$default (Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$TypeSafeProjectAccessorRule;Ljava/lang/String;Ljava/util/Map;Ljava/util/Set;ILjava/lang/Object;)Lcom/fueledbycaffeine/spotlight/buildscript/graph/ImplicitDependencyRule$TypeSafeProjectAccessorRule;
	public fun equals (Ljava/lang/Object;)Z
	public fun getIncludedProjects ()Ljava/util/Set;
	public final fun getRootProjectName ()Ljava/lang/String;
	public final fun getTypeSafeAccessorMap ()Ljava/util/Map;
	public fun hashCode ()I
	public fun toString ()Ljava/lang/String;
}

